package com.example.mmrecorder_components;

import java.io.IOException;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.app.Activity;
import android.util.Log;
import android.view.Menu;
import android.view.MotionEvent;
import android.widget.MediaController;
import android.widget.MediaController.MediaPlayerControl;

public class PlayerActivity extends Activity{
	private MediaController mMediaController;
    private MediaPlayer mMediaPlayer;
    private Handler mHandler = new Handler();
	@Override
	protected void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_player);
        mMediaPlayer = new MediaPlayer();
        mMediaController = new MediaController(this);
        mMediaController.setMediaPlayer(PlayerActivity.this);
        mMediaController.setAnchorView(findViewById(R.id.audioView));
        
        String audioFile = "/mnt/sdcard/AudioRecorder/stuff.aac" ; 
        try {
            mMediaPlayer.setDataSource(audioFile);
            mMediaPlayer.prepare();
        } catch (IOException e) {
            Log.e("PlayAudioDemo", "Could not open file " + audioFile + " for playback.", e);
        }
        mMediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            public void onPrepared(MediaPlayer mp) {
                    mHandler.post(new Runnable() {
                            public void run() {
                                    mMediaController.show(10000);
                                    mMediaPlayer.start();
                            }
                    });
            }
        });
		
	}
	 @Override
	    protected void onDestroy() {
	        super.onDestroy();
	        mMediaPlayer.stop();
	        mMediaPlayer.release();
	    }
	 @Override
	    public boolean canPause() {
	        return true;
	    }

	    @Override
	    public boolean canSeekBackward() {
	        return false;
	    }

	    @Override
	    public boolean canSeekForward() {
	        return false;
	    }

	    @Override    
	    public int getBufferPercentage() {
	        int percentage = (mMediaPlayer.getCurrentPosition() * 100) / mMediaPlayer.getDuration();
	        
	        return percentage;
	    }

	    @Override
	    public int getCurrentPosition() {
	        return mMediaPlayer.getCurrentPosition();
	    }

	    @Override
	    public int getDuration() {
	        return mMediaPlayer.getDuration();
	    }

	    @Override
	    public boolean isPlaying() {
	        return mMediaPlayer.isPlaying();
	    }

	    @Override
	    public void pause() {
	        if(mMediaPlayer.isPlaying())
	            mMediaPlayer.pause();
	    }

	    @Override
	    public void seekTo(int pos) {
	        mMediaPlayer.seekTo(pos);
	    }

	    @Override
	    public void start() {
	        mMediaPlayer.start();
	    }

	    @Override
	    public boolean onTouchEvent(MotionEvent event) {
	        mMediaController.show();
	        
	        return false;
	    }
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.player, menu);
		return true;
	}
	@Override
	public int getAudioSessionId() {
		// TODO Auto-generated method stub
		return 0;
	}

}
