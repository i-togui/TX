import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class FirstPdf {
  private static String FILE = "FirstPdf.pdf";
  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
      Font.BOLD);
  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
      Font.NORMAL, BaseColor.RED);
  private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
      Font.BOLD);
  private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
      Font.BOLD);

  static ArrayList <String> liste_Question = new <String>ArrayList();
  static ArrayList <String> liste_attendee = new <String>ArrayList();
  static ArrayList <String> liste1 = new <String>ArrayList();
  static ArrayList <String> liste2 = new <String>ArrayList();
  static ArrayList <String> liste3 = new <String>ArrayList();
  
  
  public static void main(String[] args) {
	  
	  liste_Question.add("Q1");
	  liste_Question.add("Q2");
	  liste_Question.add("Q3");
	  
	  liste_attendee.add("A1");
	  liste_attendee.add("A2");
	  liste_attendee.add("A3");
	  
	  liste1.add("XXXXXXXX");
	  liste1.add("XXXXXXXX");
	  liste1.add("XXXXXXXX");
	  liste1.add("XXXXXXXX");
	  liste2.add("XXXXXXXX");
	  liste2.add("XXXXXXXX");
	  liste2.add("XXXXXXXX");
	  liste3.add("XXXXXXXX");
	  
    try {
  
    	Document document = new Document();
      PdfWriter.getInstance(document, new FileOutputStream(FILE));
      document.open();
      addMetaData(document);
      addTitlePage(document);
      addContent(document);
      document.close();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  // iText allows to add metadata to the PDF which can be viewed in your Adobe
  // Reader
  // under File -> Properties
  private static void addMetaData(Document document) {
    document.addTitle("Repport");
    document.addSubject("Using iText");
    document.addKeywords("Repport, UTT, MMReport, MMRecord");
    document.addAuthor("TOGUI");
    document.addCreator("TOGUI");
  }

  private static void addTitlePage(Document document)
      throws DocumentException {
    Paragraph preface = new Paragraph();
        // Lets write a big header
    Paragraph p1 = new Paragraph("XXXTITRE", catFont);
    p1.setAlignment(Paragraph.ALIGN_CENTER);

    preface.add(p1);
    // Will create: Report generated by: _name, _date
    
    Paragraph p2 = new Paragraph("Meeting Done at : XXXPLACE, " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
    		 redFont);
    p2.setAlignment(Paragraph.ALIGN_CENTER);
    preface.add(p2);
    
    Paragraph p3 =new Paragraph("------------------------------------------------------------------------------",
            smallBold);
    p3.setAlignment(Paragraph.ALIGN_CENTER);
    preface.add(p3);

    p3 = new Paragraph("XXXXATTendees", smallBold);
    p3.setAlignment(Paragraph.ALIGN_CENTER);
    preface.add(p3);

    p3 = new Paragraph("XXXXRAPorteur", smallBold);
    p3.setAlignment(Paragraph.ALIGN_CENTER);
    preface.add(p3);

    
    preface.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------------",
            smallBold));

        document.add(preface);
    // Start a new page
    //document.newPage();
  }

  private static void addContent(Document document) throws DocumentException {
	  
	  for(int i=0;i<FirstPdf.liste_Question.size();i++)
	  {
		  Anchor anchor = new Anchor(liste_Question.get(i), catFont);
		  anchor.setName(liste_Question.get(i));
		  Chapter catPart = new Chapter(new Paragraph(anchor), i+1);

		  Paragraph subPara = new Paragraph("Subcategory 1", subFont);
		  Section subCatPart = catPart.addSection(subPara);
		  subCatPart.add(new Paragraph("Hello"));
			    // now add all this to the document
	      document.add(catPart);
	  }
  }

  
  private static void createList(Section subCatPart) {
    List list = new List(true, false, 10);
    list.add(new ListItem("First point"));
    list.add(new ListItem("Second point"));
    list.add(new ListItem("Third point"));
    subCatPart.add(list);
  }

  private static void addEmptyLine(Paragraph paragraph, int number) {
    for (int i = 0; i < number; i++) {
      paragraph.add(new Paragraph(" "));
    }
  }
} 
